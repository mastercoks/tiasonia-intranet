image: docker

services:
  - docker:dind

stages:
  - test
  - deploy

test:
  stage: test
  only:
    - develop
    - production
  script:
    - echo run tests in this sections

step-deploy-prod:
  stage: deploy
  only:
    - production
  script:
    - |
      echo "***** SET VARIABLES ****"
      echo "PUBLIC_URL=$PUBLIC_URL" >> packages/frontend/web/.env
      echo "NODE_ENV=$NODE_ENV" >> .env
      echo "WEB_PORT=$WEB_PORT" >> .env
      echo "WEB_URL=$WEB_URL" >> .env
      echo "API_PORT=$API_PORT" >> .env
      echo "API_SECRET=$API_SECRET" >> .env
      echo "API_EXPIRES=$API_EXPIRES" >> .env
      echo "PUBLIC_URL=$PUBLIC_URL" >> .env
      echo "TYPEORM_SYNC=$TYPEORM_SYNC" >> .env
      echo "MYSQL_HOST=$MYSQL_HOST" >> .env
      echo "MYSQL_PORT=$MYSQL_PORT" >> .env
      echo "MYSQL_USER=$MYSQL_USER" >> .env
      echo "MYSQL_PASS=$MYSQL_PASS" >> .env
      echo "MYSQL_DB=$MYSQL_DB" >> .env
      echo "MSSQL_HOST=$MSSQL_HOST" >> .env
      echo "MSSQL_USER=$MSSQL_USER" >> .env
      echo "MSSQL_PASS=$MSSQL_PASS" >> .env
      echo "MSSQL_DB=$MSSQL_DB" >> .env
      echo "MSSQL_DEBUG=$MSSQL_DEBUG" >> .env
      echo "MAIL_DRIVER=$MAIL_DRIVER" >> .env
      echo "MAIL_SERVICE=$MAIL_SERVICE" >> .env
      echo "MAIL_NAME=$MAIL_NAME" >> .env
      echo "MAIL_USER=$MAIL_USER" >> .env
      echo "MAIL_PASS=$MAIL_PASS" >> .env
      echo "REDIS_URL=$REDIS_URL" >> .env
      echo "REDIS_PASS=$REDIS_PASS" >> .env
      echo "REDIS_PORT=$REDIS_PORT" >> .env
      echo "SENTRY_DSN=$SENTRY_DSN" >> .env
    - make prod.push
    - docker stack deploy -c intranet.yml intranet
    - docker system prune -f
  environment: production
